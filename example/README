Demo application
----------------
Banklink is a java library that contains functionality to assist 
developers to implement Estonian bank services provided by banks -
authentication and payment service usage. This is an minimized demo 
web application which hopefully eases the implementation process
for you.

Documentation
-------------
This demo application covers Banklink payment message processing 
for all the supported banks. Authentication messages are not covered
in this demo although implementation should be fairly easy because
example is built on top authentication service functionality.
Payment message processing is done at test environment at https://pangalink.net/

Application structure:
    * /src/main/resources do include supported banks configuration 
      for each bank in separate directory like so:
        o /DANSKE/bank_cert.pem - bank certificate
        o /DANSKE/config.properties - common bank configuration
        o /DANSKE/request.spec - predefines packet parameter values
          according to bank specification. See also bank message packets
          descriptions at code module - /src/main/resources/META-INF/spec/eyp.spec
    * /src/main/webapp do include all the web resources an application 
      configuration.

For additional info:
    * The most up to date documentation can be found at http://....
    * Javadoc can be generated by Gradle target "javadoc" - this 
      creates javadoc in <module>\build\docs\javadoc directory.

Test environment
----------------
This demo is initially configured for Banklink common test environment user: 
    Username: banklink@github.ee
    Password: kavals6na

If you need to switch to another user then consult with the https://pangalink.net/
documentation. In short bank keys and certificates must be changed and request
client IDs should be changed according to new user.

Installation
------------
Prerequisites:
    * JDK 1.7+
    * Java container server
    * Gradle

For deploying application:
  1) Check out application configuration if it suits your container
     server setup. 
     For example open /src/main/resources/DANSKE/config.properties 
     and check if application will be actually accessible by property
     RETURN_URL with default value "http://localhost:8080/banklink/payment".
     This is where bank redirects you after completing authentication 
     or payment at bank.
  2) Build application with Gradle target "war"
  3) Deploy application from directory /build/libs
  4) Open http://localhost:8080/banklink/payment and start using payment 
     messages

Licensing
---------


Contacts
--------
* Priit Liivak
*
*

Changelog
---------
* 06.03.2014:
	 - Initial version